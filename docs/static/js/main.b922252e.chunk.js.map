{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cate","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAkBA,OACI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAMlB,SACG,uBACMO,KAAK,OACLC,MAAST,EACTU,SArBa,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,a,+BCNlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,kDAEsCC,UAAUH,GAFhD,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACzB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAchBM,GAdgB,4CAAH,sDCDPO,EAAc,SAAC,GAAsB,EAApBJ,GAAqB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGpC,OACI,sBAAKc,UAAU,0CAAf,UACE,qBAAKC,IAAMf,EAAKgB,IAAKN,IACrB,4BAAIA,QCJDO,EAAU,SAAC,GAAiB,IAAfnB,EAAc,EAAdA,SAGtB,ECHwB,SAAEA,GAG1B,MAA0Bd,mBAAS,CACnCqB,KAAM,GACNa,SAAS,IAFT,mBAAOC,EAAP,KAAcC,EAAd,KAoBA,OAbAC,qBAAW,WACPxB,EAAQC,GACEwB,MAAM,SAAAC,GAEAH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAI9B,CAACpB,IAGGqB,EDpByBK,CAAa1B,GAAhCa,EAAb,EAAON,KAAca,EAArB,EAAqBA,QAErB,OACI,qCACI,oBAAIJ,UAAU,qCAAd,SAAoDhB,IAEnDoB,GAAW,mBAAGJ,UAAU,mDAAb,qBACZ,qBAAKA,UAAU,YAAf,SAGQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAGYA,GAFCA,EAAIC,aEd5BgB,EAAe,WAIxB,MAAoCzC,mBAAS,CAAC,cAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAMA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAIA,6BAEQ2C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEAA,SAAWA,GADJA,Y,MCpB/B6B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.b922252e.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n\r\n    const [inputValue, setinputValue] = useState(''); // '  '\r\n\r\n    const handleInputChange = (e) =>{\r\n        // console.log(e.target.value);\r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2){\r\n\r\n            setCategories( cate => [ inputValue, ...cate] );\r\n            setinputValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit = {handleSubmit}>\r\n           <input\r\n                 type=\"text\"\r\n                 value = {inputValue}\r\n                 onChange = {handleInputChange}\r\n\r\n           />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\n\r\nexport const getGifs = async(category) =>{\r\n\r\n    const url =  `https://api.giphy.com/v1/gifs/search?q= ${ encodeURI(category) }&limit=10&api_key=NsfM7mcDnuC60HeX26qU7ujruT4Jk2Gg`\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img =>{\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\nreturn gifs;\r\n  \r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id,title, url} ) => {\r\n    // console.log( id, title, url);\r\n\r\n    return (\r\n        <div className=\"animate__bounceInLeft animate__delay-5s\">\r\n          <img src= {url} alt={title}/>\r\n          <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ( {category}) => {\r\n  \r\n    // const state = useFetchGifs(); // hook\r\n    const {data: images, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__fadeOut animate__delay-2s\">{category}</h3>\r\n         \r\n            {loading && <p className=\"animate_animated animate_flash animate__delay-5s\">Loading</p>}\r\n            <div className=\"card-grid\">\r\n                \r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem  \r\n                                key={img.id}\r\n                                // img= {img} />\r\n                                {...img} \r\n                            />\r\n                    ))\r\n                }\r\n                \r\n            \r\n            </div>            \r\n         </> \r\n\r\n    )\r\n}\r\n\r\n ","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = ( category ) =>{\r\n\r\n\r\n    const [state, setstate] = useState({\r\n    data: [],\r\n    loading: true\r\n        // one time ejec\r\n \r\n    });\r\n          \r\n    useEffect( ()=>{\r\n        getGifs(category)\r\n                 .then( imgs => {\r\n\r\n                        setstate({\r\n                            data: imgs,\r\n                            loading: false\r\n                        });\r\n             \r\n                 })\r\n    }, [category]);\r\n\r\n\r\n    return state; //{ data: [], loading: true}\r\n}","// rafc\r\nimport React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    // const categories = ['One Punch','Samurai X','Dragon Ball'];\r\n    //Hook de useState - \r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    // const handleAdd = () =>{\r\n    //     setcategories( [...categories, 'HunterXhunter'] );\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories= {setCategories} />\r\n            <hr />\r\n\r\n            {/* <button onClick={handleAdd}> Agregar</button> */}\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category =>(\r\n                        <GifGrid \r\n                        key = {category}\r\n                        category= {category} />\r\n                         ) )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n\n    <GifExpertApp />,\n\n  document.getElementById('root')\n);\n\n\n\n\n\n"],"sourceRoot":""}